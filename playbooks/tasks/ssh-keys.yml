---
# file: tasks/ssh-keys.yml

- name: Confg ssh keys
  block:
  - name: Generate '{{ item.username }}' user ssh keys
    user:
      name: "{{ item.username }}"
      generate_ssh_key: yes
      ssh_key_bits: "{{ host_ssh_key_bits }}"
      ssh_key_type: "{{ host_ssh_key_type }}"
      ssh_key_file: "{{ host_ssh_key_file }}"
      ssh_key_passphrase: "{{ ssh_passphrase }}"

  - name: Set ssh client config file variable
    set_fact:
      ssh_config_file: "/home/{{ item.username }}/.ssh/config"

  - name: Check that {{ ssh_config_file }} exists
    stat:
      path: "{{ ssh_config_file }}"
    register: stat_result

  - name: Create {{ ssh_config_file }} file, if it doesn't exist already
    file:
      path: "{{ ssh_config_file }}"
      state: touch
    when: stat_result.stat.exists == False 

  - name: Configure ssh-client for '{{ item.username }}' user
    blockinfile:
      path: "/home/{{ item.username }}/.ssh/config"
      owner: "{{ item.username }}"
      group: "{{ item.username }}"
      mode: 0644
      backup: true
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      block: |
        Host *
          Compression yes
          ServerAliveInterval 30m
          ServerAliveCountMax 1
          ControlMaster auto
          ControlPath ~/{{ host_ssh_socket_dir }}/%r@%h:%p
          ControlPersist 30m

  - name: Create ssh socket directory
    file:
      state: directory
      path: "/home/{{ item.username }}/{{ host_ssh_socket_dir }}/"
      owner: "{{ item.username }}"
      group: "{{ item.username }}"
# END block Confg ssh keys
  tags:
    - sshkeys